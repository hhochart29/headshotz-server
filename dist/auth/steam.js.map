{"version":3,"sources":["../../src/auth/steam.js"],"names":["SteamRouter","passport","serializeUser","user","done","_json","deserializeUser","obj","use","SteamStrategy","returnURL","process","env","SERVER_ADDRESS","realm","apiKey","STEAM_API_KEY","_identifier","profile","a","secret","name","resave","saveUninitialized","initialize","session","get","authenticate","failureRedirect","_req","res","redirect","CLIENT_ADDRESS","req","send","error","logout"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,WAAW,GAAG,sBAApB;;AAEAC,kBAASC,aAAT,CAAuB,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAAC,IAAD,EAAOD,IAAI,CAACE,KAAZ,CAA3C;;AACAJ,kBAASK,eAAT,CAAyB,CAACC,GAAD,EAAMH,IAAN,KAAeA,IAAI,CAAC,IAAD,EAAOG,GAAP,CAA5C;;AAEAN,kBAASO,GAAT,CACE,IAAIC,sBAAJ,CACE;AACEC,EAAAA,SAAS,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,oBAD3C;AAEEC,EAAAA,KAAK,EAAG,GAAEH,OAAO,CAACC,GAAR,CAAYC,cAAe,GAFvC;AAGEE,EAAAA,MAAM,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AAHtB,CADF,EAME,CAACC,WAAD,EAAcC,OAAd,EAAuBd,IAAvB,KAAgC;AAC9B,SAAOA,IAAI,CAAC,IAAD,EAAOc,OAAP,CAAX;AACD,CARH,CADF;;AAaA,MAAMC,CAAC,GAAGR,OAAO,CAACC,GAAR,CAAYI,aAAtB;AACAhB,WAAW,CAACQ,GAAZ,CACE,6BAAQ;AACNY,EAAAA,MAAM,EAAE,iBADF;AAENC,EAAAA,IAAI,EAAE,YAFA;AAGNC,EAAAA,MAAM,EAAE,IAHF;AAINC,EAAAA,iBAAiB,EAAE;AAJb,CAAR,CADF;AASAvB,WAAW,CAACQ,GAAZ,CAAgBP,kBAASuB,UAAT,EAAhB;AACAxB,WAAW,CAACQ,GAAZ,CAAgBP,kBAASwB,OAAT,EAAhB;AAEAzB,WAAW,CAAC0B,GAAZ,CACE,QADF,EAEEzB,kBAAS0B,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA/B,CAFF;AAKA5B,WAAW,CAAC0B,GAAZ,CACE,SADF,EAEEzB,kBAAS0B,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA/B,CAFF,EAGE,CAACC,IAAD,EAAOC,GAAP,KAAeA,GAAG,CAACC,QAAJ,CAAapB,OAAO,CAACC,GAAR,CAAYoB,cAAzB,CAHjB;AAMAhC,WAAW,CAAC0B,GAAZ,CAAgB,UAAhB,EAA4B,OAAOO,GAAP,EAAYH,GAAZ,KAAoB;AAC9C,MAAI,CAACG,GAAG,CAACR,OAAL,IAAgB,CAACQ,GAAG,CAACR,OAAJ,CAAYxB,QAAjC,EACE,OAAO6B,GAAG,CAACI,IAAJ,CAAS;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAT,CAAP;AAEF,QAAM,wBAASF,GAAG,CAACR,OAAJ,CAAYxB,QAArB,CAAN;AACA,SAAO6B,GAAG,CAACI,IAAJ,CAAS;AAAED,IAAAA,GAAG,EAAEA,GAAG,CAACR,OAAJ,IAAeQ,GAAG,CAACR,OAAJ,CAAYxB;AAAlC,GAAT,CAAP;AACD,CAND;AAQAD,WAAW,CAAC0B,GAAZ,CAAgB,SAAhB,EAA2B,CAACO,GAAD,EAAMH,GAAN,KAAc;AACvCG,EAAAA,GAAG,CAACG,MAAJ;AACAN,EAAAA,GAAG,CAACC,QAAJ,CAAapB,OAAO,CAACC,GAAR,CAAYoB,cAAzB;AACD,CAHD;eAKehC,W","sourcesContent":["import { Router } from 'express'\nimport session from 'express-session'\nimport SteamStrategy from 'passport-steam'\nimport passport from 'passport'\nimport { saveUser } from '../firebase'\n\nconst SteamRouter = Router()\n\npassport.serializeUser((user, done) => done(null, user._json))\npassport.deserializeUser((obj, done) => done(null, obj))\n\npassport.use(\n  new SteamStrategy(\n    {\n      returnURL: `${process.env.SERVER_ADDRESS}/auth/steam/return`,\n      realm: `${process.env.SERVER_ADDRESS}/`,\n      apiKey: process.env.STEAM_API_KEY\n    },\n    (_identifier, profile, done) => {\n      return done(null, profile)\n    }\n  )\n)\n\nconst a = process.env.STEAM_API_KEY\nSteamRouter.use(\n  session({\n    secret: 'HeadshotzSecret',\n    name: 'HZ_SESSION',\n    resave: true,\n    saveUninitialized: true\n  })\n)\n\nSteamRouter.use(passport.initialize())\nSteamRouter.use(passport.session())\n\nSteamRouter.get(\n  '/login',\n  passport.authenticate('steam', { failureRedirect: '/' })\n)\n\nSteamRouter.get(\n  '/return',\n  passport.authenticate('steam', { failureRedirect: '/' }),\n  (_req, res) => res.redirect(process.env.CLIENT_ADDRESS)\n)\n\nSteamRouter.get('/session', async (req, res) => {\n  if (!req.session || !req.session.passport)\n    return res.send({ error: 'No active session' })\n\n  await saveUser(req.session.passport)\n  return res.send({ req: req.session && req.session.passport })\n})\n\nSteamRouter.get('/logout', (req, res) => {\n  req.logout()\n  res.redirect(process.env.CLIENT_ADDRESS)\n})\n\nexport default SteamRouter\n"],"file":"steam.js"}