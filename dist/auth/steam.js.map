{"version":3,"sources":["../../src/auth/steam.js"],"names":["process","env","NODE_ENV","require","config","SteamRouter","passport","serializeUser","user","done","_json","deserializeUser","obj","use","SteamStrategy","returnURL","SERVER_ADDRESS","realm","apiKey","STEAM_API_KEY","_identifier","profile","initialize","session","get","authenticate","failureRedirect","_req","res","redirect","CLIENT_ADDRESS","req","send","error","logout"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;;;AALA,IAAIA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2CC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;AAO3C,MAAMC,WAAW,GAAG,sBAApB;;AAEAC,kBAASC,aAAT,CAAuB,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAAC,IAAD,EAAOD,IAAI,CAACE,KAAZ,CAA3C;;AACAJ,kBAASK,eAAT,CAAyB,CAACC,GAAD,EAAMH,IAAN,KAAeA,IAAI,CAAC,IAAD,EAAOG,GAAP,CAA5C;;AAEAN,kBAASO,GAAT,CACE,IAAIC,sBAAJ,CACE;AACEC,EAAAA,SAAS,EAAG,GAAEf,OAAO,CAACC,GAAR,CAAYe,cAAe,oBAD3C;AAEEC,EAAAA,KAAK,EAAG,GAAEjB,OAAO,CAACC,GAAR,CAAYe,cAAe,GAFvC;AAGEE,EAAAA,MAAM,EAAElB,OAAO,CAACC,GAAR,CAAYkB;AAHtB,CADF,EAME,CAACC,WAAD,EAAcC,OAAd,EAAuBZ,IAAvB,KAAgC;AAC9B,SAAOA,IAAI,CAAC,IAAD,EAAOY,OAAP,CAAX;AACD,CARH,CADF;;AAaAhB,WAAW,CAACQ,GAAZ,CAAgBP,kBAASgB,UAAT,EAAhB;AACAjB,WAAW,CAACQ,GAAZ,CAAgBP,kBAASiB,OAAT,EAAhB;AAEAlB,WAAW,CAACmB,GAAZ,CACE,QADF,EAEElB,kBAASmB,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA/B,CAFF;AAKArB,WAAW,CAACmB,GAAZ,CACE,SADF,EAEElB,kBAASmB,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA/B,CAFF,EAGE,CAACC,IAAD,EAAOC,GAAP,KAAeA,GAAG,CAACC,QAAJ,CAAa7B,OAAO,CAACC,GAAR,CAAY6B,cAAzB,CAHjB;AAMAzB,WAAW,CAACmB,GAAZ,CAAgB,UAAhB,EAA4B,OAAOO,GAAP,EAAYH,GAAZ,KAAoB;AAC9C,MAAI,CAACG,GAAG,CAACR,OAAL,IAAgB,CAACQ,GAAG,CAACR,OAAJ,CAAYjB,QAAjC,EACE,OAAOsB,GAAG,CAACI,IAAJ,CAAS;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAT,CAAP;AAEF,QAAM,wBAASF,GAAG,CAACR,OAAJ,CAAYjB,QAArB,CAAN;AACA,SAAOsB,GAAG,CAACI,IAAJ,CAAS;AAAET,IAAAA,OAAO,EAAEQ,GAAG,CAACR,OAAJ,CAAYjB;AAAvB,GAAT,CAAP;AACD,CAND;AAQAD,WAAW,CAACmB,GAAZ,CAAgB,SAAhB,EAA2B,CAACO,GAAD,EAAMH,GAAN,KAAc;AACvCG,EAAAA,GAAG,CAACG,MAAJ;AACAN,EAAAA,GAAG,CAACC,QAAJ,CAAa7B,OAAO,CAACC,GAAR,CAAY6B,cAAzB;AACD,CAHD;eAKezB,W","sourcesContent":["if (process.env.NODE_ENV !== 'production') require('dotenv').config()\r\n\r\nimport { Router } from 'express'\r\nimport SteamStrategy from 'passport-steam'\r\nimport passport from 'passport'\r\nimport { saveUser } from '../firebase'\r\n\r\nconst SteamRouter = Router()\r\n\r\npassport.serializeUser((user, done) => done(null, user._json))\r\npassport.deserializeUser((obj, done) => done(null, obj))\r\n\r\npassport.use(\r\n  new SteamStrategy(\r\n    {\r\n      returnURL: `${process.env.SERVER_ADDRESS}/auth/steam/return`,\r\n      realm: `${process.env.SERVER_ADDRESS}/`,\r\n      apiKey: process.env.STEAM_API_KEY\r\n    },\r\n    (_identifier, profile, done) => {\r\n      return done(null, profile)\r\n    }\r\n  )\r\n)\r\n\r\nSteamRouter.use(passport.initialize())\r\nSteamRouter.use(passport.session())\r\n\r\nSteamRouter.get(\r\n  '/login',\r\n  passport.authenticate('steam', { failureRedirect: '/' })\r\n)\r\n\r\nSteamRouter.get(\r\n  '/return',\r\n  passport.authenticate('steam', { failureRedirect: '/' }),\r\n  (_req, res) => res.redirect(process.env.CLIENT_ADDRESS)\r\n)\r\n\r\nSteamRouter.get('/session', async (req, res) => {\r\n  if (!req.session || !req.session.passport)\r\n    return res.send({ error: 'No active session' })\r\n\r\n  await saveUser(req.session.passport)\r\n  return res.send({ session: req.session.passport })\r\n})\r\n\r\nSteamRouter.get('/logout', (req, res) => {\r\n  req.logout()\r\n  res.redirect(process.env.CLIENT_ADDRESS)\r\n})\r\n\r\nexport default SteamRouter\r\n"],"file":"steam.js"}