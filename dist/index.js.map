{"version":3,"sources":["../src/index.js"],"names":["process","env","NODE_ENV","require","config","app","use","origin","CLIENT_ADDRESS","credentials","passport","serializeUser","user","done","_json","deserializeUser","obj","SteamStrategy","returnURL","SERVER_ADDRESS","realm","apiKey","STEAM_API_KEY","_identifier","profile","secret","name","resave","saveUninitialized","initialize","session","get","authenticate","failureRedirect","_req","res","redirect","req","send","error","logout","listen","PORT","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAIA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2CC,QAAQ,QAAR,EAAkBC,MAAlB;;AAE3C,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,oBAAK,EAAEC,QAAQP,QAAQC,GAAR,CAAYO,cAAtB,EAAsCC,aAAa,IAAnD,EAAL,CAAR;;AAEAC,mBAASC,aAAT,CAAuB,CAACC,IAAD,EAAOC,IAAP,KAAgBA,KAAK,IAAL,EAAWD,KAAKE,KAAhB,CAAvC;AACAJ,mBAASK,eAAT,CAAyB,CAACC,GAAD,EAAMH,IAAN,KAAeA,KAAK,IAAL,EAAWG,GAAX,CAAxC;AACAN,mBAASJ,GAAT,CACE,IAAIW,uBAAJ,CACE;AACEC,aAAY,GAAElB,QAAQC,GAAR,CAAYkB,cAAe,oBAD3C;AAEEC,SAAQ,GAAEpB,QAAQC,GAAR,CAAYkB,cAAe,GAFvC;AAGEE,UAAQrB,QAAQC,GAAR,CAAYqB;AAHtB,CADF,EAME,CAACC,WAAD,EAAcC,OAAd,EAAuBX,IAAvB,KAAgC;AAC9B,SAAOA,KAAK,IAAL,EAAWW,OAAX,CAAP;AACD,CARH,CADF;;AAaAnB,IAAIC,GAAJ,CACE,8BAAQ;AACNmB,UAAQzB,QAAQC,GAAR,CAAYqB,aADd;AAENI,QAAM,YAFA;AAGNC,UAAQ,IAHF;AAINC,qBAAmB;AAJb,CAAR,CADF;;AASAvB,IAAIC,GAAJ,CAAQI,mBAASmB,UAAT,EAAR;AACAxB,IAAIC,GAAJ,CAAQI,mBAASoB,OAAT,EAAR;;AAEAzB,IAAI0B,GAAJ,CAAQ,aAAR,EAAuBrB,mBAASsB,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,iBAAiB,GAAnB,EAA/B,CAAvB;;AAEA5B,IAAI0B,GAAJ,CACE,oBADF,EAEErB,mBAASsB,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,iBAAiB,GAAnB,EAA/B,CAFF,EAGE,CAACC,IAAD,EAAOC,GAAP,KAAeA,IAAIC,QAAJ,CAAapC,QAAQC,GAAR,CAAYO,cAAzB,CAHjB;;AAMAH,IAAI0B,GAAJ,CAAQ,gBAAR,EAA0B,OAAOM,GAAP,EAAYF,GAAZ,KAAoB;AAC5C,MAAI,CAACE,IAAIP,OAAL,IAAgB,CAACO,IAAIP,OAAJ,CAAYpB,QAAjC,EACE,OAAOyB,IAAIG,IAAJ,CAAS,EAAEC,OAAO,mBAAT,EAAT,CAAP;;AAEF,QAAM,wBAASF,IAAIP,OAAJ,CAAYpB,QAArB,CAAN;AACA,SAAOyB,IAAIG,IAAJ,CAAS,EAAED,KAAKA,IAAIP,OAAJ,IAAeO,IAAIP,OAAJ,CAAYpB,QAAlC,EAAT,CAAP;AACD,CAND;;AAQAL,IAAI0B,GAAJ,CAAQ,eAAR,EAAyB,CAACM,GAAD,EAAMF,GAAN,KAAc;AACrCE,MAAIG,MAAJ;AACAL,MAAIC,QAAJ,CAAapC,QAAQC,GAAR,CAAYO,cAAzB;AACD,CAHD;;AAKAH,IAAIoC,MAAJ,CAAWzC,QAAQC,GAAR,CAAYyC,IAAZ,IAAoB,IAA/B,EAAqC,MAAM;AACzCC,UAAQC,GAAR,CAAY,sBAAZ,EAAoC5C,QAAQC,GAAR,CAAYyC,IAAZ,IAAoB,IAAxD;AACD,CAFD","file":"index.js","sourcesContent":["import express from 'express'\r\nimport cors from 'cors'\r\nimport session from 'express-session'\r\nimport passport from 'passport'\r\nimport SteamStrategy from 'passport-steam'\r\nimport { saveUser } from './firebase'\r\nif (process.env.NODE_ENV !== 'production') require('dotenv').config()\r\n\r\nconst app = express()\r\napp.use(cors({ origin: process.env.CLIENT_ADDRESS, credentials: true }))\r\n\r\npassport.serializeUser((user, done) => done(null, user._json))\r\npassport.deserializeUser((obj, done) => done(null, obj))\r\npassport.use(\r\n  new SteamStrategy(\r\n    {\r\n      returnURL: `${process.env.SERVER_ADDRESS}/steam/auth/return`,\r\n      realm: `${process.env.SERVER_ADDRESS}/`,\r\n      apiKey: process.env.STEAM_API_KEY\r\n    },\r\n    (_identifier, profile, done) => {\r\n      return done(null, profile)\r\n    }\r\n  )\r\n)\r\n\r\napp.use(\r\n  session({\r\n    secret: process.env.STEAM_API_KEY,\r\n    name: 'HZ_SESSION',\r\n    resave: true,\r\n    saveUninitialized: true\r\n  })\r\n)\r\n\r\napp.use(passport.initialize())\r\napp.use(passport.session())\r\n\r\napp.get('/steam/auth', passport.authenticate('steam', { failureRedirect: '/' }))\r\n\r\napp.get(\r\n  '/steam/auth/return',\r\n  passport.authenticate('steam', { failureRedirect: '/' }),\r\n  (_req, res) => res.redirect(process.env.CLIENT_ADDRESS)\r\n)\r\n\r\napp.get('/steam/session', async (req, res) => {\r\n  if (!req.session || !req.session.passport)\r\n    return res.send({ error: 'No active session' })\r\n\r\n  await saveUser(req.session.passport)\r\n  return res.send({ req: req.session && req.session.passport })\r\n})\r\n\r\napp.get('/steam/logout', (req, res) => {\r\n  req.logout()\r\n  res.redirect(process.env.CLIENT_ADDRESS)\r\n})\r\n\r\napp.listen(process.env.PORT || 5000, () => {\r\n  console.log('Listening on port : ', process.env.PORT || 5000)\r\n})\r\n"]}